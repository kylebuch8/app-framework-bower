{"version":3,"sources":["app-framework.js"],"names":["afDrawerPanel","$afComponentRegistry","DrawerPanelController","$scope","$element","$attrs","vm","this","open","toggleDrawer","find","toggleClass","destroy","register","afComponentId","$inject","directive","restrict","transclude","template","controller","controllerAs","drawerPanel","handle","toggle","instance","get","service","afNavDrawer","afComponentRegistry","i","length","instances","$$afHandle","deregister","index","indexOf","splice","push","angular","noop","getInstances","module","factory"],"mappings":"CAAE,WACF,YAWA,SAASA,GAAcC,GAGnB,QAASC,GAAsBC,EAAQC,EAAUC,GAC7C,GAAIC,GAAKC,IAETJ,GAAOK,MAAO,EAEdF,EAAGG,aAAe,WACdN,EAAOK,MAAQL,EAAOK,KACtBJ,EAASM,KAAK,iBAAiBC,YAAY,SAG/CL,EAAGM,QAAUX,EAAqBY,SAASP,EAAID,EAAOS,eAZ1DZ,EAAsBa,SAAW,SAAU,WAAY,SAevD,IAAIC,IACAC,SAAU,KACVC,YAAY,EACZC,SAAU,4VAKVC,WAAYlB,EACZmB,aAAc,KAGlB,OAAOL,GAKX,QAASM,GAAYrB,GACjB,MAAO,UAAUsB,GAQb,QAASC,KACL,MAAOC,IAAYA,EAAShB,eARhC,GAAIgB,GAAWxB,EAAqByB,IAAIH,GACpCI,GACAH,OAAQA,EAGZ,OAAOG,IAWf,QAASC,KACL,GAAIZ,IACAC,SAAU,KAGd,OAAOD,GAOX,QAASa,KAUL,QAASH,GAAIH,GACT,GAAIE,GACAK,EAAI,EACJC,EAASC,EAAUD,MAEvB,KAAKD,EAAOC,EAAJD,EAAYA,GAAK,EAGrB,GAFAL,EAAWO,EAAUF,GAEjBL,EAASQ,aAAeV,EACxB,MAAOE,EAIf,OAAO,MAGX,QAASZ,GAASY,EAAUF,GAUxB,QAASW,KACL,GAAIC,GAAQH,EAAUI,QAAQX,EAChB,MAAVU,GACAH,EAAUK,OAAOF,EAAO,GAZhC,MAAKZ,IAILE,EAASQ,WAAaV,EACtBS,EAAUM,KAAKb,GAERS,GANIK,QAAQC,KAgBvB,QAASC,KACL,MAAOT,GA5CX,GAAIA,MACAL,GACAD,IAAKA,EACLb,SAAUA,EACV4B,aAAcA,EAGlB,OAAOd,GAhFXY,QAAQG,OAAO,iBAAkB,wCAAwC,sCAAsC,8CAC/GH,QAAQG,OAAO,yCACX,8CAEC1B,UAAU,gBAAiBhB,GAC3B2C,QAAQ,iBAAkBrB,GAE/BtB,EAAce,SAAW,wBAiCzBO,EAAYP,SAAW,wBAiBvBwB,QAAQG,OAAO,0CACV1B,UAAU,cAAeY,GAW9BW,QAAQG,OAAO,gDACVC,QAAQ,uBAAwBd","file":"app-framework.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\nangular.module('app-framework', ['app-framework.directives.drawer-panel','app-framework.directives.nav-drawer','app-framework.services.component-registry']);\nangular.module('app-framework.directives.drawer-panel', [\n    'app-framework.services.component-registry'\n])\n    .directive('afDrawerPanel', afDrawerPanel)\n    .factory('$afDrawerPanel', drawerPanel);\n\nafDrawerPanel.$inject = ['$afComponentRegistry'];\n\nfunction afDrawerPanel($afComponentRegistry) {\n    DrawerPanelController.$inject = ['$scope', '$element', '$attrs'];\n\n    function DrawerPanelController($scope, $element, $attrs) {\n        var vm = this;\n\n        $scope.open = false;\n\n        vm.toggleDrawer = function () {\n            $scope.open = !$scope.open;\n            $element.find('af-nav-drawer').toggleClass('open');\n        };\n\n        vm.destroy = $afComponentRegistry.register(vm, $attrs.afComponentId);\n    }\n\n    var directive = {\n        restrict: 'AE',\n        transclude: true,\n        template: '<button class=\"hamburger\" type=\"button\" role=\"button\" aria-label=\"Toggle Navigation\" style=\"position: fixed; z-index: 1006; height: 60px;\" ng-class=\"{ \\'open\\': open }\" ng-click=\"vm.toggleDrawer()\">' +\n                      '<span class=\"lines\"></span>' +\n                  '</button>' +\n                  '<ng-transclude></ng-transclude>' +\n                  '<af-scrim ng-class=\"{ \\'show\\': open }\" ng-click=\"vm.toggleDrawer()\"></af-scrim>',\n        controller: DrawerPanelController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\ndrawerPanel.$inject = ['$afComponentRegistry'];\n\nfunction drawerPanel($afComponentRegistry) {\n    return function (handle) {\n        var instance = $afComponentRegistry.get(handle);\n        var service = {\n            toggle: toggle\n        };\n\n        return service;\n\n        function toggle() {\n            return instance && instance.toggleDrawer();\n        }\n    };\n}\n\nangular.module('app-framework.directives.nav-drawer', [])\n    .directive('afNavDrawer', afNavDrawer);\n\nfunction afNavDrawer() {\n    var directive = {\n        restrict: 'AE'\n    };\n\n    return directive;\n}\n\n\nangular.module('app-framework.services.component-registry', [])\n    .factory('$afComponentRegistry', afComponentRegistry);\n\nfunction afComponentRegistry() {\n    var instances = [];\n    var service = {\n        get: get,\n        register: register,\n        getInstances: getInstances\n    };\n\n    return service;\n\n    function get(handle) {\n        var instance,\n            i = 0,\n            length = instances.length;\n\n        for (i; i < length; i += 1) {\n            instance = instances[i];\n\n            if (instance.$$afHandle === handle) {\n                return instance;\n            }\n        }\n\n        return null;\n    }\n\n    function register(instance, handle) {\n        if (!handle) {\n            return angular.noop;\n        }\n\n        instance.$$afHandle = handle;\n        instances.push(instance);\n\n        return deregister;\n\n        function deregister() {\n            var index = instances.indexOf(instance);\n            if (index !== -1) {\n                instances.splice(index, 1);\n            }\n        }\n    }\n\n    function getInstances() {\n        return instances;\n    }\n}\n}());\n"],"sourceRoot":"/source/"}